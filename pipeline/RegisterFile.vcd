$date
	Sat Dec 12 21:10:37 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module RegisterFile_tb $end
$var wire 8 ! ReadData2 [7:0] $end
$var wire 8 " ReadData1 [7:0] $end
$var reg 3 # ExchangeData [2:0] $end
$var reg 3 $ ExchangeRegister [2:0] $end
$var reg 3 % ReadRegister1 [2:0] $end
$var reg 3 & ReadRegister2 [2:0] $end
$var reg 1 ' RegExchange $end
$var reg 1 ( RegWrite $end
$var reg 8 ) WriteData [7:0] $end
$var reg 3 * WriteRegister [2:0] $end
$var reg 1 + clk $end
$scope module instance1 $end
$var wire 3 , ExchangeData [2:0] $end
$var wire 3 - ExchangeRegister [2:0] $end
$var wire 3 . ReadRegister1 [2:0] $end
$var wire 3 / ReadRegister2 [2:0] $end
$var wire 1 ' RegExchange $end
$var wire 1 ( RegWrite $end
$var wire 8 0 WriteData [7:0] $end
$var wire 3 1 WriteRegister [2:0] $end
$var wire 1 + clk $end
$var reg 8 2 ReadData1 [7:0] $end
$var reg 8 3 ReadData2 [7:0] $end
$var integer 32 4 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 4
b0 3
b0 2
b100 1
b1111010 0
b100 /
b110 .
b111 -
b100 ,
0+
b100 *
b1111010 )
0(
0'
b100 &
b110 %
b111 $
b100 #
b0 "
b0 !
$end
#20
1+
#40
0+
1(
1'
#60
b1111010 !
b1111010 3
1+
#80
b1111010 "
b1111010 2
0+
b10111110 )
b10111110 0
b111 %
b111 .
0'
#100
b10111110 !
b10111110 3
1+
#120
0+
